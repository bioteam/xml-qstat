#!/bin/sh
# Simple start script for the Cocoon server engine
#
# 0. Define safe path
PATH=/bin:/usr/bin
#
## CUSTOMIZE AS REQUIRED
#
# 1. Downgrade to a non-root user account (adjust as required)
runAs=cfdadmin

# 2. Location of cocoon server and java
COCOON_HOME=/data/app/cocoon
JAVA_HOME=/usr/lib/jvm/java

# 3. Might require GridEngine information for later queries
#    (only required when using the command-generator)
SGE_ROOT=/opt/grid
SGE_CELL=default

# 4. Extra path(s) for anything we wish to use via the java CommandGenerator
for d in /data/app/bin
do
    [ -d $d ] && PATH=$PATH:$d
done

export COCOON_HOME JAVA_HOME PATH
unset DISPLAY  # safety

#---------------------------------------------------------------------------
# The following lines provide the necessary info for adding a startup script
# according to the Linux Standard Base Specification (LSB).
#
### BEGIN INIT INFO
# Provides:       xmlqstat.cocoon
# Required-Start: $network $remote_fs
# Should-Start:   network-remotefs
# Required-Stop:
# Default-Start:  3 5
# Default-Stop: 0 1 2 6
# Description:  start cocoon for xmlqstat
### END INIT INFO
#---------------------------------------------------------------------------

# this script should run as 'runAs'
if [ "$UID" -eq 0 -a "${runAs:=root}" != root ]
then
    exec sudo -S -u $runAs $0 $@
    exitcode=$?       # retain exitcode

    [ "$exitcode" == 0 ] || {
        echo "could not change to $runAs"
        exit $exitcode
    }
fi

# Init GridEngine path/environment variables
# to allow webserver access to GridEngine commands
if [ -f $SGE_ROOT/$SGE_CELL/common/settings.sh ]
then
    export SGE_ROOT SGE_CELL
    . $SGE_ROOT/$SGE_CELL/common/settings.sh
else
    unset SGE_ROOT SGE_CELL
fi


daemon=$COCOON_HOME/cocoon.sh
name=cocoon
desc="Apache Cocoon"

# logging
LOG=/var/log/cocoon
LOG=/dev/null

[ -f $daemon -a -x $daemon ] || {
    echo "$daemon not found"
    exit 5      # LSB compliant exit status - program is not installed
}

test -f $daemon || exit 0
set -e
case "$1" in
start)
    echo -n "Starting $desc: "
    $daemon servlet >> $LOG 2>&1 &
    echo "$name"
    ;;

stop)
    echo -n "Stopping $desc: "
    # get pid
    pid=`ps aux | awk '{if (/java/ && /cocoon/ && !/awk/) print $2}'`
    if [ -z "$pid" ]
    then
        echo "process not found"
    else
        echo "sending TERM signal"
        kill -15 $pid
    fi
    ;;

restart)
    ## Stop (if running) and start anew
    $0 stop
    $0 start
    ;;

*)
    echo "Usage: $0 {start|stop|restart}" >&2
    exit 1
    ;;
esac

exit 0
# -------------------------------------------------------------- end-of-file
