<xsl:stylesheet version="1.0"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns="http://www.w3.org/1999/xhtml"
    xmlns:dt="http://xsltsl.org/date-time"
    xmlns:str="http://xsltsl.org/string"
    exclude-result-prefixes="dt str"
>
<!--
   | process XML generated by
   |     "qstat -u * -xml -r -s prs"
   | to produce a list of active and pending jobs
-->

<!-- output declarations -->
<xsl:output method="xml" indent="yes" version="1.0" encoding="UTF-8"
    doctype-public="-//W3C//DTD XHTML 1.0 Transitional//EN"
    doctype-system="http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"
/>

<!-- Import the XSLTL library method -->
<xsl:include href="xsltl/stdlib.xsl"/>

<!-- Import our uniform masthead -->
<xsl:include href="xmlqstat-masthead.xsl"/>

<!-- Import our templates -->
<xsl:include href="xmlqstat-templates.xsl"/>

<!-- get specific configuration parameters -->
<xsl:param name="viewlogProgram">
  <xsl:value-of select="document('../xml/CONFIG.xml')/config/viewlogProgram"/>
</xsl:param>

<!-- XSL Parameters -->
<xsl:param name="timestamp"/>
<xsl:param name="activeJobTable"/>
<xsl:param name="pendingJobTable"/>
<xsl:param name="filterByUser"/>

<xsl:template match="/" >
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta http-equiv="Refresh" content="30" />
<title>jobs</title>

<xsl:text>
</xsl:text>
<xsl:comment> Load dortch cookie utilities and display altering code </xsl:comment>
<xsl:text>
</xsl:text>
<script
    language="JavaScript" type="text/javascript"
    src="javascript/cookie.js"
/>
<script
    language="JavaScript" type="text/javascript"
    src="javascript/xmlqstat.js"
/>
<xsl:text>
</xsl:text>

<xsl:comment> Load CSS from a file </xsl:comment>
<xsl:text>
</xsl:text>
<link href="css/xmlqstat.css" media="screen" rel="Stylesheet" type="text/css" />

<xsl:text>
</xsl:text>
<xsl:comment> Override CSS </xsl:comment>
<xsl:text>
</xsl:text>
<style type="text/css">
<!-- DIFFERENT CSS STYLE DEPENDING ON USER COOKIE PREFERENCE PARAM(s) -->
<!-- show/hide activeJobTable -->
<xsl:choose>
<xsl:when test="$activeJobTable = 'no'" >
   .activeJobTable { visibility: hidden; display: none; }
</xsl:when>
<xsl:otherwise>
   .activeJobTable { visibility: visible; display: inline; }
</xsl:otherwise>
</xsl:choose>
<!-- show/hide pendingJobTable -->
<xsl:choose>
<xsl:when test="$pendingJobTable = 'no'" >
   .pendingJobTable { visibility: hidden; display: none; }
</xsl:when>
<xsl:otherwise>
   .pendingJobTable { visibility: visible; display: inline; }
</xsl:otherwise>
</xsl:choose>
<!-- END COOKIE DEPENDENT VARIABLE CSS STYLE OUTPUT -->
<xsl:text>
</xsl:text>
</style>
<xsl:text>
</xsl:text>
<xsl:comment> End Override CSS </xsl:comment>
<xsl:text>
</xsl:text>
</head>
<xsl:text>
</xsl:text>

<!-- CALCULATE TOTALS -->

<!-- done CALCULATE -->

<body>
<xsl:text>
</xsl:text>
<xsl:comment> Main body content </xsl:comment>
<xsl:text>
</xsl:text>

<div id="main">
<!-- Topomost Logo Div -->
<xsl:call-template name="topLogo"/>
<!-- Top Menu Bar -->
<xsl:call-template name="topMenu"/>

<xsl:text>
</xsl:text>
<xsl:if test="//query/host">
  <div id="upperBar">
    <xsl:comment> Top dotted line bar (holds the qmaster host and update time) </xsl:comment>
    [<xsl:value-of select="//query/host"/>]
    <!-- remove 'T' in dateTime for easier reading -->
    <xsl:value-of select="translate(//query/time, 'T', ' ')"/>
  </div>
</xsl:if>

<xsl:text>
</xsl:text>
<xsl:comment> Active Jobs </xsl:comment>
<xsl:text>
</xsl:text>
<xsl:if test="count(//job_info)">

<!--
   | count active jobs/slots for user or everyone
   | here we can count the slots directly, since each job/task is listed separately
   -->
<xsl:variable name="AJ_total">
  <xsl:choose>
  <xsl:when test="$filterByUser">
    <xsl:value-of select="count(//job_info/queue_info/job_list[JB_owner=$filterByUser])"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="count(//job_info/queue_info/job_list)"/>
  </xsl:otherwise>
  </xsl:choose>
</xsl:variable>
<xsl:variable name="AJ_slots">
  <xsl:choose>
  <xsl:when test="$filterByUser">
    <xsl:value-of select="count(//job_info/queue_info/job_list[JB_owner=$filterByUser])"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="sum(//job_info/queue_info/job_list/slots)"/>
  </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:choose>
<xsl:when test="$AJ_total &gt; 0">
  <!-- active jobs: -->
  <blockquote>
  <table class="qstat" width="100%">
    <tr valign="middle">
    <td>
      <div class="tableDescriptorElement">
        <xsl:value-of select="$AJ_total"/> active jobs
        <xsl:if test="$filterByUser">
          for <em><xsl:value-of select="$filterByUser"/></em>
        </xsl:if>
        (<xsl:value-of select="$AJ_slots"/> slots)
      </div>
      <!-- show/hide activeJobTable -->
      <xsl:call-template name="toggleElementVisibility">
        <xsl:with-param name="name" select="'activeJobTable'"/>
      </xsl:call-template>
    </td>
    </tr>
  </table>
  <xsl:apply-templates select="//job_info/queue_info" />
  </blockquote>
</xsl:when>
<xsl:otherwise>
  <!-- no active jobs -->
  <blockquote>
  <span class="actheader">
    <img alt="*" align="absmiddle" src="images/icons/silk/bullet_blue.png" />
    no active jobs
    <xsl:if test="$filterByUser">
      for <em><xsl:value-of select="$filterByUser"/></em>
    </xsl:if>
  </span>
  </blockquote>
</xsl:otherwise>
</xsl:choose>

<xsl:text>
</xsl:text>
<xsl:comment> Pending Jobs </xsl:comment>
<xsl:text>
</xsl:text>

<!--
   | count pending jobs/slots for user or everyone
   | we must count the slots ourselves, since pending job tasks are grouped together
   -->
<xsl:variable name="PJ_total">
  <xsl:choose>
  <xsl:when test="$filterByUser">
    <xsl:value-of select="count(//job_info/job_info/job_list[JB_owner=$filterByUser])"/>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="count(//job_info/job_info/job_list)"/>
  </xsl:otherwise>
  </xsl:choose>
</xsl:variable>
<xsl:variable name="PJ_slots">
  <xsl:choose>
  <xsl:when test="$filterByUser">
    <xsl:call-template name="count-slots">
      <xsl:with-param name="nodeList" select="//job_info/job_info/job_list[JB_owner=$filterByUser]"/>
    </xsl:call-template>
  </xsl:when>
  <xsl:otherwise>
    <xsl:call-template name="count-slots">
      <xsl:with-param name="nodeList" select="//job_info/job_info/job_list"/>
    </xsl:call-template>
  </xsl:otherwise>
  </xsl:choose>
</xsl:variable>

<xsl:choose>
<xsl:when test="$PJ_total &gt; 0">
  <!-- pending jobs: -->
  <blockquote>
  <table class="qstat" width="100%">
    <tr valign="middle">
    <td>
      <div class="tableDescriptorElement">
        <xsl:value-of select="$PJ_total"/> pending jobs
        <xsl:if test="$filterByUser" >
          for <em><xsl:value-of select="$filterByUser"/></em>
        </xsl:if>
        (<xsl:value-of select="$PJ_slots"/> slots)
      </div>
      <!-- show/hide pendingJobTable -->
      <xsl:call-template name="toggleElementVisibility">
        <xsl:with-param name="name" select="'pendingJobTable'"/>
      </xsl:call-template>
    </td>
    </tr>
  </table>
  <xsl:apply-templates select="//job_info/job_info" />
  </blockquote>
</xsl:when>
<xsl:otherwise>
  <!-- no pending jobs -->
  <blockquote>
  <span class="pendheader">
    <img alt="*" align="absmiddle" src="images/icons/silk/bullet_blue.png" />
    no pending jobs
    <xsl:if test="$filterByUser" >
      for user <em><xsl:value-of select="$filterByUser"/></em>
    </xsl:if>
  </span>
  </blockquote>
</xsl:otherwise>
</xsl:choose>
</xsl:if>

<!-- bottom status bar with rendered time -->
<xsl:call-template name="bottomStatusBar">
  <xsl:with-param name="timestamp" select="$timestamp" />
</xsl:call-template>

<xsl:text>
</xsl:text>
</div>
</body></html>
</xsl:template>


<!--
  active jobs: header
 -->
<xsl:template match="job_info/queue_info">
  <div class="activeJobTable" id="activeJobTable">
    <table class="qstat" width="100%">
    <tr>
      <th>jobID</th>
      <th>owner</th>
      <th>name</th>
      <th>slots</th>
      <th>tasks</th>
      <th>queue</th>
      <th>startTime</th>
      <th>state</th>
    </tr>
    <xsl:for-each select="job_list[@state='running']">
      <!-- sorted by job number and task -->
      <xsl:sort select="JB_job_number"/>
      <xsl:sort select="tasks"/>
      <xsl:apply-templates select="."/>
    </xsl:for-each>
    </table>
  </div>
</xsl:template>

<!--
  active jobs: contents
 -->
<xsl:template match="job_list[@state='running']">
<!-- per user sort -->
<xsl:if test="not($filterByUser) or JB_owner=$filterByUser">

  <tr>
  <!-- jobID with resource requests -->
  <!-- link jobID to details: "jobinfo.html?{jobID}" -->
  <td>
    <xsl:element name="a">
      <xsl:attribute name="title">
        <xsl:for-each select="hard_request">
          <xsl:value-of select="@name"/>=<xsl:value-of select="."/>
<xsl:text>
</xsl:text>
        </xsl:for-each>
      </xsl:attribute>
      <xsl:attribute name="href">jobinfo.html?<xsl:value-of select="JB_job_number"/></xsl:attribute>
      <xsl:value-of select="JB_job_number" />
    </xsl:element>
  </td>
  <!-- owner -->
  <td>
    <!-- link owner names to "jobs.html?{owner}" -->
    <xsl:element name="a">
      <xsl:attribute name="title">view jobs owned by <xsl:value-of select="JB_owner"/></xsl:attribute>
      <xsl:attribute name="href">jobs.html?<xsl:value-of select="JB_owner"/></xsl:attribute>
      <xsl:value-of select="JB_owner" />
    </xsl:element>
  </td>
  <!-- name and full name -->
  <td>
    <xsl:choose>
    <xsl:when test="string-length(full_job_name) &gt; 24">
      <span style="cursor:help;">
      <xsl:element name="acronym">
        <xsl:attribute name="title">
          <xsl:value-of select="full_job_name" />
        </xsl:attribute>
        <xsl:value-of select="substring(full_job_name,0,24)" /> ...
      </xsl:element>
      </span>
    </xsl:when>
    <xsl:otherwise>
      <xsl:value-of select="full_job_name" />
    </xsl:otherwise>
    </xsl:choose>
  </td>
  <!-- slots -->
  <td>
    <xsl:value-of select="slots" />
  </td>
  <!-- task -->
  <td>
    <xsl:value-of select="tasks" />
  </td>
  <!-- queue -->
  <td>
    <xsl:call-template name="unqualifiedQueue">
      <xsl:with-param name="queue" select="queue_name"/>
    </xsl:call-template>
  </td>
  <!-- startTime -->
  <td>
     <xsl:value-of select="JAT_start_time"/>
  </td>
  <!-- state : with link to residuals -->
  <td>
    <xsl:value-of select="state" />
    <xsl:if test="$viewlogProgram">
      <xsl:apply-templates select="." mode="viewlog"/>
    </xsl:if>
  </td>
  </tr>
<xsl:text>
</xsl:text>
</xsl:if>
</xsl:template>


<!--
  pending jobs: header
 -->
<xsl:template match="//job_info/job_info">
  <div class="pendingJobTable" id="pendingJobTable">
    <table class="qstat" width="100%">
    <tr>
      <th>jobID</th>
      <th>owner</th>
      <th>name</th>
      <th>slots</th>
      <th>tasks</th>
      <th>queue</th>
      <th>priority</th>
      <th>state</th>
    </tr>
    <xsl:for-each select="job_list[@state='pending']">
      <!-- sorted by priority and job number -->
      <xsl:sort select="JAT_prio" order="descending"/>
      <xsl:sort select="JB_job_number"/>
      <xsl:apply-templates select="."/>
    </xsl:for-each>
    </table>
  </div>
</xsl:template>

<!--
  pending jobs: content
 -->
<xsl:template match="job_list[@state='pending']">
<!-- per user sort -->
<xsl:if test="not($filterByUser) or JB_owner=$filterByUser">

  <tr>
  <!-- jobID with resource requests -->
  <!-- link jobID to details: "jobinfo.html?{jobID}" -->
  <td>
    <xsl:element name="a">
      <xsl:attribute name="title">
        <xsl:for-each select="hard_request">
          <xsl:value-of select="@name"/>=<xsl:value-of select="."/>
<xsl:text>
</xsl:text>
        </xsl:for-each>
      </xsl:attribute>
      <xsl:attribute name="href">jobinfo.html?<xsl:value-of select="JB_job_number"/></xsl:attribute>
      <xsl:value-of select="JB_job_number" />
    </xsl:element>
  </td>
  <!-- owner -->
  <td>
    <!-- link owner names to "jobs.html?{owner}" -->
    <xsl:element name="a">
      <xsl:attribute name="title">view jobs owned by <xsl:value-of select="JB_owner"/></xsl:attribute>
      <xsl:attribute name="href">jobs.html?<xsl:value-of select="JB_owner"/></xsl:attribute>
      <xsl:value-of select="JB_owner" />
    </xsl:element>
  </td>
  <!-- name -->
  <td>
  <xsl:choose>
  <xsl:when test="string-length(full_job_name) &gt; 24">
    <span style="cursor:help;">
    <xsl:element name="acronym">
      <xsl:attribute name="title">
        <xsl:value-of select="full_job_name" />
      </xsl:attribute>
      <xsl:value-of select="substring(full_job_name,0,24)" /> ...
    </xsl:element>
    </span>
  </xsl:when>
  <xsl:otherwise>
    <xsl:value-of select="full_job_name" />
  </xsl:otherwise>
  </xsl:choose>
  </td>
  <!-- slots -->
  <td>
    <xsl:value-of select="slots" />
  </td>
  <!-- task -->
  <td>
    <xsl:value-of select="tasks" />
  </td>
  <!-- queue -->
  <td>
    <xsl:for-each select="hard_req_queue">
      <xsl:call-template name="unqualifiedQueue">
        <xsl:with-param name="queue" select="."/>
      </xsl:call-template>
      <xsl:text> </xsl:text>
    </xsl:for-each>
  </td>
  <!-- priority with submissionTime-->
  <td>
    <span style="cursor:help;">
      <xsl:element name="acronym">
        <xsl:attribute name="title">
          <xsl:value-of select="JB_submission_time"/>
        </xsl:attribute>
      <xsl:value-of select="JAT_prio" />
      </xsl:element>
    </span>
  </td>
  <!-- state -->
  <td>
    <xsl:value-of select="state" />
  </td>
  </tr>
<xsl:text>
</xsl:text>
</xsl:if>
</xsl:template>


<!--
  create links for viewlog with plots
-->
<xsl:template match="job_list" mode="viewlog">
<xsl:text>
</xsl:text>

<xsl:if test="count(hard_request)">
  <xsl:variable name="resources">
    <xsl:for-each
        select="hard_request"><xsl:value-of
        select="@name"/>,</xsl:for-each>
  </xsl:variable>
  <xsl:variable name="request">jobid=<xsl:value-of
        select="JB_job_number"/><xsl:if
        test="tasks">.<xsl:value-of
        select="tasks"/></xsl:if><xsl:text>&amp;</xsl:text>resources=<xsl:value-of
        select="$resources"/>
  </xsl:variable>

  <!-- url viewlog?jobid=...&resources={resources} -->
  <xsl:element name="a">
    <xsl:attribute name="title">viewlog</xsl:attribute>
    <xsl:attribute name="href"><xsl:value-of
        select="$viewlogProgram"/>?<xsl:value-of
        select="$request"/></xsl:attribute>
    <img src="images/icons/silk/page_find.png" alt="[v]" border="0" />
  </xsl:element>

  <!-- url viewlog?action=plot&jobid=...&resources={resources} -->
  <xsl:element name="a">
    <xsl:attribute name="title">plotlog</xsl:attribute>
    <xsl:attribute name="href"><xsl:value-of
        select="$viewlogProgram"/>?action=plot<xsl:text>&amp;</xsl:text><xsl:value-of
        select="$request"/></xsl:attribute>
    <img src="images/icons/silk/chart_curve.png" alt="[p]" border="0" />
  </xsl:element>

  <!-- url viewlog?action=plot&owner=...&resources={resources} -->
  <xsl:element name="a">
    <xsl:attribute name="title">plotlogs</xsl:attribute>
    <xsl:attribute name="href"><xsl:value-of
        select="$viewlogProgram"/>?action=plot<xsl:text>&amp;</xsl:text>owner=<xsl:value-of
        select="JB_owner"/><xsl:text>&amp;</xsl:text>resources=<xsl:value-of
        select="$resources"/></xsl:attribute>
    <img src="images/icons/silk/chart_curve_add.png" alt="[P]" border="0" />
  </xsl:element>
</xsl:if>
</xsl:template>


</xsl:stylesheet>
